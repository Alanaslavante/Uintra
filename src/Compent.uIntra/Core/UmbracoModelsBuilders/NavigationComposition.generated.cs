//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1066 with alias "navigationComposition"
	/// <summary>Navigation Composition</summary>
	public partial interface INavigationComposition : IPublishedContent
	{
		/// <summary>Hide from Left Navigation</summary>
		bool IsHideFromLeftNavigation { get; }

		/// <summary>Hide from Sub Navigation</summary>
		bool IsHideFromSubNavigation { get; }

		/// <summary>Navigation Name</summary>
		string NavigationName { get; }
	}

	/// <summary>Navigation Composition</summary>
	[PublishedContentModel("navigationComposition")]
	public partial class NavigationComposition : PublishedContentModel, INavigationComposition
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "navigationComposition";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public NavigationComposition(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<NavigationComposition, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Hide from Left Navigation
		///</summary>
		[ImplementPropertyType("isHideFromLeftNavigation")]
		public bool IsHideFromLeftNavigation
		{
			get { return GetIsHideFromLeftNavigation(this); }
		}

		/// <summary>Static getter for Hide from Left Navigation</summary>
		public static bool GetIsHideFromLeftNavigation(INavigationComposition that) { return that.GetPropertyValue<bool>("isHideFromLeftNavigation"); }

		///<summary>
		/// Hide from Sub Navigation
		///</summary>
		[ImplementPropertyType("isHideFromSubNavigation")]
		public bool IsHideFromSubNavigation
		{
			get { return GetIsHideFromSubNavigation(this); }
		}

		/// <summary>Static getter for Hide from Sub Navigation</summary>
		public static bool GetIsHideFromSubNavigation(INavigationComposition that) { return that.GetPropertyValue<bool>("isHideFromSubNavigation"); }

		///<summary>
		/// Navigation Name
		///</summary>
		[ImplementPropertyType("navigationName")]
		public string NavigationName
		{
			get { return GetNavigationName(this); }
		}

		/// <summary>Static getter for Navigation Name</summary>
		public static string GetNavigationName(INavigationComposition that) { return that.GetPropertyValue<string>("navigationName"); }
	}
}
