@using System.Web.Mvc.Html
@using uIntra.CentralFeed
@using uIntra.Core.Extentions
@model CentralFeedListViewModel

@{
    var tabSettings = Model.Settings.First(s => s.Type.GetHashCode() == Model.Type.GetHashCode());

}

<input type="hidden" name="preventScrolling" value="@Convert.ToByte(Model.BlockScrolling)" />
<input type="hidden" name="version" value="@Model.Version" />
<input type="hidden" name="showSubscribed" value="@Model.ShowSubscribed.ToString().ToLower()" />
<input type="hidden" name="includeBulletin" value="@Model.IncludeBulletin.ToString().ToLower()" />
<input type="hidden" name="showPinned" value="@Model.ShowPinned.ToString().ToLower()"/>

<div class="check" style="display: @(tabSettings.HasSubscribersFilter ? "block" : "none") ">
    <label class="check__label">
        <input type="checkbox" class="check__box" name="showSubscribedFilter" @(Model.ShowSubscribed ? "checked" : "") value="true">
        <span class="check__fake-input icon-check"></span>
        <span class="check__fake-label">@Html.Localize("CentralFeedList.ShowSubscribed.chkbx")</span>
    </label>
</div>

<div class="check" style="display: @(tabSettings.HasBulletinFilter ? "block" : "none")">
    <label class="check__label">
        <input type="checkbox" class="check__box" name="includeBulletinFilter" @(Model.IncludeBulletin ? "checked" : "") value="true">
        <span class="check__fake-input icon-check"></span>
        <span class="check__fake-label">@Html.Localize("CentralFeedList.IncludeBulletin.chkbx")</span>
    </label>
</div>

<div class="check">
    <label class="check__label" style="display: @(tabSettings.HasPinnedFilter ? "block" : "none")">
        <input type="checkbox" class="check__box" name="showPinnedFilter" @(Model.ShowPinned ? "checked" : "") value="true">
        <span class="check__fake-input icon-check"></span>
        <span class="check__fake-label">@Html.Localize("CentralFeedList.ShowPinned.chkbx")</span>
    </label>
</div>

<div class="row">
    <input type="button" name="clearFilters" value="@Html.Localize("CentralFeedList.ClearFilters.btn")" />
</div>

@if (Model.Type == CentralFeedTypeEnum.Bulletins)
{
    Html.RenderAction("CreationForm", "Bulletins");
}

@if (!Model.Items.Any())
{
    @Html.Localize("CentralFeedList.Empty.lbl")
}
@foreach (var item in Model.Items)
{
    var itemSettings = Model.Settings.First(s => s.Type.GetHashCode() == item.Type.GetHashCode());

    <div data-anchor="@item.Id">
        @{ Html.RenderAction("CentralFeedItem", itemSettings.Controller, new { item = item }); }
    </div>
            }
