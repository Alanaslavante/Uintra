@using System.Web.Mvc.Ajax
@using System.Web.Mvc.Html
@using Uintra.Comments
@using Uintra.Core.Extensions
@model Uintra.Comments.CommentViewModel

@{
    var inactiveUser = Model.Creator.Inactive ? "_inactive" : String.Empty;
}

<div id="@Model.CommentViewId" class="js-comment-view" data-id="@Model.Id">
   @Html.Action("Photo", "User", new { user = Model.Creator, profilePageUrl = Model.CreatorProfileUrl })
    <div class="comments__list-body">
        <div class="comments__list-holder clearfix">
            <div class="comments__author-about @inactiveUser">
                <a class="comments__author-name" href="@Model.CreatorProfileUrl">@Model.Creator.DisplayedName</a>
                <span class="comments__author-inactive">[@Html.Localize("Comments.Author.Inactive.lbl")]</span>
                <span class="comments__divider"> - </span>
                <span class="comments__author-date">@(Model.CreatedDate.ToDateFormat())</span>
                <span class="comments__divider"> - </span>
                <span class="comments__author-time">@(Model.CreatedDate.ToTimeFormat())</span>
            </div>
            @if (Model.ModifyDate.HasValue)
            {
                <div class="comments__modified">
                    <span class="glyphicon glyphicon-pencil"></span>
                    <div class="comments__modified-info">
                        @Html.Localize("CommentsView.ModifyDate.lbl")
                        <span class="comments__author-date">@(Model.ModifyDate.Value.ToDateFormat())</span>
                        <span class="comments__divider"> - </span>
                        <span class="comments__author-time">@(Model.ModifyDate.Value.ToTimeFormat())</span>
                    </div>
                </div>
            }
            @if (!Model.IsReply)
            {
                <a class="js-comment-showReplyLink comments__reply">@Html.Localize("CommentsView.Reply.lnk")</a>
            }
            @if (Model.CanDelete || Model.CanEdit)
            {
                <div class="comments__controls">
                    <ul class="comments__controls-list">
                        <li class="comments__controls-list-item">
                            @if (Model.CanEdit)
                            {
                                <a class="comments__controls-list-link js-comment-editlink">@Html.Localize("CommentsView.Edit.lbl")</a>
                            }
                        </li>
                        <li class="comments__controls-list-item">
                            @if (Model.CanDelete)
                            {
                                @Ajax.ActionLink(Html.Localize("CommentsView.Delete.lbl"), "Delete", "Comments", new { id = Model.Id },
                                    new AjaxOptions { HttpMethod = "Delete", UpdateTargetId = Model.ElementOverviewId, InsertionMode = InsertionMode.ReplaceWith, OnComplete = $"new Uintra.methods.CommentOverview('#{Model.ElementOverviewId}');" },
                                    new { @class = "js-comment-delete comments__controls-list-link", data_text = Html.Localize("Common.AreYouSure") })
                            }
                        </li>
                    </ul>
                </div>
            }
        </div>
        <div class="comments__list-text js-comment-description">
            @Html.Raw(Model.Text)
        </div>
        @if (Model.CanEdit)
        {
            <div class="comments__list-text js-comment-editContainer" style="display: none">
                @Html.Partial("~/App_Plugins/Comments/View/CommentsEditView.cshtml", new CommentEditModel { Id = Model.Id, Text = Model.Text, UpdateElementId = Model.ElementOverviewId })
            </div>
                    }

        @if (Model.Replies.Any())
        {
            <ul class="js-comment-view-replies comments__list _inner">
                @foreach (var reply in Model.Replies)
                {
                    <li class="comments__list-item clearfix">@Html.Action("CommentsView", "Comments", reply)</li>
                        }
            </ul>
                        }
        @if (!Model.IsReply)
        {
            <div class="js-comment-reply comments__list-replies" style="display: none">
                <span class="js-comment-hideReplyLink comments__hide"><i class="icon-close"></i></span>
                @Html.Partial("~/App_Plugins/Comments/View/CommentsCreateView.cshtml", new CommentCreateModel { ActivityId = Model.ActivityId, ParentId = Model.Id, UpdateElementId = Model.ElementOverviewId })
            </div>
                    }
    </div>
</div>