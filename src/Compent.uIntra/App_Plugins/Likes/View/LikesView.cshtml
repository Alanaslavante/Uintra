@using System.Web.Mvc.Ajax
@using uIntra.Core.Extensions
@model uIntra.Likes.LikesViewModel
@{
    var isLiked = Model.CanAddLike || Model.IsReadOnly ? "" : "_isLiked";
    var entityId = Model.CommentId ?? Model.ActivityId;
}

<div class="likes-wrapper" id="likes_@entityId">
    @if (Model.ShowTitle)
    {
        <h3 class="like__title">@Html.Localize("Likes.Title.lbl")</h3>
    }

    <div class="like js-readonly-click-warning" data-is-readonly="@Model.IsReadOnly">
        <input type="hidden" name="readonlyClickTitle" value="@Html.Localize("Likes.ReadonlyClick.Title.lbl")" />
        <input type="hidden" name="readonlyClickMessage" value="@Html.Localize("Likes.ReadonlyClick.Message.lbl")" />

        <span class="like__set @isLiked">
            <i class="icon-like"></i>
            @if (Model.Users.Any() && !Model.IsReadOnly)
            {
                <span>@Model.Users.Count()</span>
            }
        </span>

        @if (!Model.IsReadOnly)
        {
            var hasLikesClass = Model.Users.Any() ? "_hasLikes" : string.Empty;

            @(Model.CanAddLike 
                ? Ajax.ActionLink("Like", "AddLike", "Likes", new { activityId = Model.ActivityId, commentId = Model.CommentId }, new AjaxOptions { HttpMethod = "Post", InsertionMode = InsertionMode.ReplaceWith, UpdateTargetId = $"likes_{entityId}" }, new { @class = $"like__link {hasLikesClass}" }) 
                : Ajax.ActionLink("Remove", "RemoveLike", "Likes", new { activityId = Model.ActivityId, commentId = Model.CommentId }, new AjaxOptions { HttpMethod = "Post", InsertionMode = InsertionMode.ReplaceWith, UpdateTargetId = $"likes_{entityId}" }, new { @class = $"like__link _remove {hasLikesClass}" }))

            if (Model.Users.Any())
            {
                <div class="like__popup">
                    <ul class="like__list">
                        @foreach (var name in Model.Users)
                        {
                            <li class="like__list-item">@name</li>
                        }
                    </ul>
                </div>
            }
        }
    </div>
</div>