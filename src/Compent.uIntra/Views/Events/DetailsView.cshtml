@using System.Web.Mvc.Html
@using Extensions
@using uIntra.Core.Extensions
@model Compent.uIntra.Core.Events.EventExtendedViewModel

<section class="content">
    <div class="feed__btns clearfix">
        <a href="#" class="btn pull-right hide"><i class="glyphicon glyphicon-print"></i>@Html.Localize("DetailsView.Print.lbl")</a>
        @if (Model.CanEdit)
        {
            <a class="btn pull-right" href="@Model.Links.Edit">@Html.Localize("DetailsView.Edit.lbl")</a>
        }
        <a class="link__back" href="@Model.Links.Overview">@Html.Localize("DetailsView.GoToList.lbl")</a>
    </div>
    <div class="feed__item _details">
        @Html.Action("DetailsHeader", "Activity", new { header = Model.HeaderInfo })
        <div class="feed__item-txt">
            <div>
                <span>@Model.StartDate.Day</span>
                <span>@Model.StartDate.ToString("MMM")</span>
            </div>
            <div>
                <span>@Model.StartDate.ToDateTimeFormat() - @Model.EndDate.ToDateTimeFormat()</span>
            </div>
            @if (Model.LocationTitle.HasValue())
            {
                <div>@Model.LocationTitle</div>
            }
            @if (Model.LocationAddress.HasValue())
            {
                <div>@Model.LocationAddress</div>
            }
        </div>
        <div class="feed__item-txt">
            @Html.Raw(Model.Description)
        </div>
        <div class="feed__item-feed">
            <div class="feed__item-feed-holder">
                @{ Html.RenderAction("Likes", "Likes", new { likesInfo = Model.LikesInfo }); }
            </div>
            @if (!Model.IsReadOnly && Model.CanSubscribe)
            {
                Html.RenderAction("Index", "Subscribe", new { subscribe = Model.SubscribeInfo, activityId = Model.Id });
                Html.RenderAction("Overview", "Subscribe", new { activityId = Model.Id });
            }
        </div>
        <div class="feed__item-images">
            @{ Html.RenderAction("RenderGallery", "LightboxGallery", new { mediaIds = Model.Media }); }
        </div>
        <div class="comments">
            @{ Html.RenderAction("OverView", "Comments", new { commentsInfo = Model.CommentsInfo });}
        </div>
    </div>
</section>
