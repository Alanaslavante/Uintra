@model uCommunity.Likes.App_Plugins.Likes.Models.ActivityLikesViewModel
@{ 
    Html.EnableUnobtrusiveJavaScript(true);
    var isLiked = Model.CanAddLike ? "" : "_isLiked";
}
<div class="content__item-like" id="likes_@Model.ActivityId">
    <div id="count_@Model.ActivityId">
        <a class="content__item-like-link @isLiked" href="#"><i class="icon-like"></i> <span class="likesValue_@Model.ActivityId">@Model.Count</span></a>
        
        <div class="content__item-like-set">
            @(Model.CanAddLike ?
                Ajax.ActionLink("Add", "AddLike", "Likes", new { userId = Model.UserId, activityId = Model.ActivityId }, new AjaxOptions { HttpMethod = "Post", UpdateTargetId = string.Concat("likes_", Model.ActivityId) }) :
                Ajax.ActionLink("Remove", "RemoveLike", "Likes", new { userId = Model.UserId, activityId = Model.ActivityId }, new AjaxOptions { HttpMethod = "Post", UpdateTargetId = string.Concat("likes_", Model.ActivityId) })
            )
        </div>
    </div>

    @if (Model.Count > 0)
    {
        <div class="content__item-like-popup" id="likesPopup_@Model.ActivityId">
            @foreach (var name in Model.Users)
            {
                <span>
                    @Html.Label(name)
                </span><br />
            }
        </div>
    }
</div>