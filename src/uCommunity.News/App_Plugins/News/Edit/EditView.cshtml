@using System.Web.Mvc
@using uCommunity.Core
@using uCommunity.Core.Controls.FileUpload
@using uCommunity.Core.Extentions
@using Umbraco.Web
@model uCommunity.News.NewsEditModel

<div class="form" id="js-news-edit-page">
    @using (Html.BeginUmbracoForm("Edit", "News", FormMethod.Post, new { id = "form" }))
    {
        <h1 class="form__title">@Html.Localize("NewsEdit.Title.lbl")</h1>
        <input type="hidden" name="id" value="@Model.Id" />
        <div class="form__row clearfix">
            <label class="form__label" for="title">@Html.Localize("NewsEdit.Title.lbl") <span class="form__required">*</span></label>
            <input class="form__input" id="title" type="text" name="title" value="@(Model.Title)"
                   data-val-required="@Html.Localize("NewsEdit.TitleRequired.lbl")" data-val-length-max="200" data-val-length="@Html.Localize("NewsEdit.TitleMaxLength.lbl")"
                   data-val="true" />
        </div>
        <div class="form__row clearfix">
            <label class="form__label" for="description">@Html.Localize("NewsEdit.Description.lbl") <span class="form__required">*</span></label>
            <div id="description">
                @Html.Raw(Model.Description)
            </div>
            <input type="hidden" id="js-hidden-description-container" name="description" value="@(Model.Description)"
                   data-val-required="@Html.Localize("NewsEdit.DescriptionRequired.lbl")" data-val="true" />
        </div>
        <div class="form__row clearfix">
            <label class="form__label" for="js-publish-date">@Html.Localize("NewsEdit.PublishDate.lbl")</label>
            <input class="form__input" id="js-publish-date" data-default-date="@Model.PublishDate.ToDateTimeValuePickerFormat()" data-date-format="@Html.GetDateTimePickerFormat()"/>
            <input type="hidden" id="js-publish-date-value" name="publishDate" data-val-required="@Html.Localize("NewsEdit.PublishDateRequired.lbl")" data-val="true"/>
        </div>
        <div class="form__row clearfix">
            @{
                var unpublishDatevalue = @Model.UnpublishDate.HasValue ? Model.UnpublishDate.Value.ToDateTimeValuePickerFormat() : "";
            }
            <label class="form__label" for="js-unpublish-date">@Html.Localize("NewsCreate.UnpublishDate.lbl")</label>
            <input class="form__input" id="js-unpublish-date" data-default-date="@unpublishDatevalue" data-date-format="@Html.GetDateTimePickerFormat()" />
            <input type="hidden" id="js-unpublish-date-value" name="unpublishDate" data-val="true" />
        </div>
        <div class="form__row clearfix">
            @Html.RenderAction("PinActivity", "PinActivity");
        </div>
        <div class="form__row clearfix">
            <label class="form__label" for="file-upload">@Html.Localize("NewsEdit.UploadFiles.lbl")</label>
            @{
                var settings = new FileUploadSettings { AllowedExtentions = ViewData["AllowedMediaExtentions"] as string };
                Html.RenderAction("Editor", "FileUpload", new { Settings = settings, Model = Model?.Media });
            }
        </div>
        <div class="form__row clearfix">
            @Html.ValidationSummary()
        </div>
        <div class="form__row clearfix">
            <input type="hidden" name="mediaRootId" value="@Model.MediaRootId" />
            <input class="form__btn _black _submit" type="submit" value="@Html.Localize("NewsEdit.Edit.btn")" />
            <a class="form__btn _default" href="@(Context.GetBackLink($"{ViewData["DetailsPageUrl"]}?Id={Model.Id}"))">@Html.Localize("Common.Cancel.lnk")</a>
        </div>
                }
</div>