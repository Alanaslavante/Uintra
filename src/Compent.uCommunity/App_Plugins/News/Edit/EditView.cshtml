@using System.Web.Mvc
@using uCommunity.Core
@using uCommunity.Core.Controls.FileUpload
@using uCommunity.Core.Extentions
@using Umbraco.Web
@model uCommunity.News.NewsEditModel

<div class="form" id="js-news-edit-page">
    @using (Html.BeginUmbracoForm("Edit", "News", FormMethod.Post, new { id = "form" }))
    {
        <h1 class="form__title">@Html.Localize("NewsEdit.Title.lbl")</h1>
        <input type="hidden" name="id" value="@Model.Id" />
        <div class="form__row clearfix">
            <label class="form__label" for="title">@Html.Localize("NewsEdit.Title.lbl") <span class="form__required">*</span></label>
            <input class="form__input" id="title" type="text" name="title" value="@(Model.Title)"
                   data-val-required="@Html.Localize("NewsEdit.TitleRequired.lbl")" data-val-length-max="200" data-val-length="@Html.Localize("NewsEdit.TitleMaxLength.lbl")"
                   data-val="true" />
        </div>
        <div class="form__row clearfix">
            <label class="form__label" for="teaser">@Html.Localize("NewsEdit.Teaser.lbl") <span class="form__required">*</span></label>
            <textarea class="form__textarea" id="teaser" name="teaser" data-val-required="@Html.Localize("NewsEdit.TeaserRequired.lbl")" data-val-length-max="4000" data-val-length="@Html.Localize("NewsEdit.TeaserMaxLength.lbl")" data-val="true">@Html.Raw(Model.Teaser)</textarea>
        </div>
        <div class="form__row clearfix">
            <label class="form__label" for="description">@Html.Localize("NewsEdit.Description.lbl") <span class="form__required">*</span></label>
            <div id="description">
                @Html.Raw(Model.Description)
            </div>
            <input type="hidden" id="js-hidden-description-container" name="description" value="@(Model.Description)"
                   data-val-required="@Html.Localize("NewsEdit.DescriptionRequired.lbl")" data-val="true" />
        </div>
        <div class="form__row clearfix">
            <label class="form__label" for="js-publish-date">@Html.Localize("NewsEdit.PublishDate.lbl")</label>
            <input class="form__input" id="js-publish-date" data-default-date="@Model.PublishDate.ToString(IntranetConstants.Common.DefaultDateTimeValuePickerFormat)" data-date-format="@IntranetConstants.Common.DefaultDateTimePickerFormat"/>
            <input type="hidden" id="js-publish-date-value" name="publishDate" data-val-required="@Html.Localize("NewsEdit.PublishDateRequired.lbl")" data-val="true"/>
        </div>
        <div class="form__row clearfix">
            @{
                var unpublishDatevalue = @Model.UnpublishDate.HasValue ? Model.UnpublishDate.Value.ToString(IntranetConstants.Common.DefaultDateTimeValuePickerFormat) : "";
            }
            <label class="form__label" for="js-unpublish-date">@Html.Localize("NewsCreate.UnpublishDate.lbl")</label>
            <input class="form__input" id="js-unpublish-date" data-default-date="@unpublishDatevalue" data-date-format="@IntranetConstants.Common.DefaultDateTimePickerFormat" />
            <input type="hidden" id="js-unpublish-date-value" name="unpublishDate" data-val="true" />
        </div>
        <div class="form__row clearfix">
            <div class="check">
                <label class="check__label">
                    @Html.CheckBoxFor(m => m.IsPinned, new { @id = "pin-control", @class = "check__box" })
                    <span class="check__fake-input icon-check"></span>
                    <span class="check__fake-label">@Html.Localize("EventsCreate.SetPinned.lbl")</span>
                </label>
                <div id="pin-info">
                    @Html.Localize("NewsEdit.PinActivityMessage.lbl")
                    @{
                        var daysRange = Enumerable.Range(1, 30);
                        var listOfDays = new List<SelectListItem>() { new SelectListItem() { Value = 0.ToString(), Text = "None" } };
                        listOfDays.AddRange(daysRange.Select(d => new SelectListItem() { Text = d.ToString() }));
                        @Html.DropDownListFor(d => d.PinDays, listOfDays)
                    }
                    <label class="check__label">
                        <label class="check__label">
                            <input type="checkbox" class="check__box" id="pin-accept" />
                            <span class="check__fake-input icon-check"></span>
                            <span class="check__fake-label">@Html.Localize("NewsEdit.AcceptPin.lbl")</span>
                        </label>
                    </label>
                </div>
            </div>
        </div>
        <div class="form__row clearfix">
            <label class="form__label" for="file-upload">@Html.Localize("NewsEdit.UploadFiles.lbl")</label>
            @{
                var settings = new FileUploadSettings { AllowedExtentions = ViewData["AllowedMediaExtentions"] as string };
                Html.RenderAction("Editor", "FileUpload", new { Settings = settings, Model = Model?.Media });
            }
        </div>
        <div class="form__row clearfix">
            @Html.ValidationSummary()
        </div>
        <div class="form__row clearfix">
            <input type="hidden" name="mediaRootId" value="@Model.MediaRootId" />
            <input class="form__btn _black _submit" type="submit" value="@Html.Localize("NewsEdit.Edit.btn")" />
            <a class="form__btn _default" href="@(Context.GetBackLink($"{ViewData["DetailsPageUrl"]}?Id={Model.Id}"))">@Html.Localize("Common.Cancel.lnk")</a>
        </div>
                }
</div>