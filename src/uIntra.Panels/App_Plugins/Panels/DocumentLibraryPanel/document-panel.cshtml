@using uIntra.Core
@using uIntra.Panels
@using uIntra.Panels.Core
@using uIntra.Panels.Core.Models
@inherits UmbracoViewPage<dynamic>
@{
    var viewModel = Model.value;
    if (viewModel == null)
    {
        return;
    }
    var direction = (viewModel.type == PanelsConstants.VerticalAlignmentAlias ? "_vertical" : "_horizontal");
    string seeAllLink = viewModel?.link?.link;
}

<section class="block _document-panel clearfix @direction" id="@Guid.NewGuid()">
    @{
        int? mediaId = null;
        if (viewModel.media != null && viewModel.media != "")
        {
            mediaId = viewModel.media;
        }

        var mediaCollection = (mediaId.HasValue ? Umbraco.TypedMedia(mediaId.Value).Children : Umbraco.TypedMediaAtRoot())
            .Where(s => s.ContentType.Alias != UmbracoAliases.Media.FolderTypeAlias)
            .Take((int)viewModel.count)
            .Select(DocumentPanelMediaViewModel.FromPublishedContent);

        string titleLink = viewModel?.titleLink?.link;
        string title = viewModel?.title;
    }

    @if (string.IsNullOrEmpty(titleLink))
    {
        <h2 class="block__title">@title</h2>
    }
    else
    {
        <h2 class="block__title">
            <a class="block__title-link" href="@titleLink" target="@viewModel.titleLink.target">@title</a>
        </h2>
    }

    <div class="block__description">@Html.Raw((string)viewModel.description)</div>
    <ul class="documents">
        @foreach (var media in mediaCollection)
        {

            <li class="documents__item">
                <a class="documents__item-link" href="@media.Url" target="_blank">
                    <span class="documents__icon file-extension _@media.Extention"></span>
                    <span class="documents__item-name">@media.Title</span>
                </a>
            </li>

        }
    </ul>
    @if (!string.IsNullOrEmpty(seeAllLink))
    {
        <a class="documents__more" target="@((string)viewModel.link.target)" href="@seeAllLink">@((string)viewModel.link.caption)</a>
    }
</section>